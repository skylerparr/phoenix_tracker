services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      no_cache: true
    volumes:
      - ./backend:/app
      - ./data:/data
      - cargo-target:/app/target
      - cargo-registry:/usr/local/cargo/registry
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - PORT=3001
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - /app/node_modules
    command: >
      sh -c 'echo "window.ENV = { REACT_APP_API_BASE_URL: \"$$REACT_APP_API_BASE_URL\" };" > /app/public/runtime-config.js && npm start'
    ports:
      - "4000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
      - NODE_ENV=development

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  backend_data:
  cargo-target:
  cargo-registry:
  postgres_data:
