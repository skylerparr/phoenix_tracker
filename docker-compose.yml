services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      no_cache: true
    volumes:
      - ./backend:/app
      - ./data:/data
      - ./phoenix-file-uploads:${BASE_FILE_PATH}
      - cargo-target:/app/target
      - cargo-registry:/usr/local/cargo/registry
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - FILE_STORE_SCHEME=${FILE_STORE_SCHEME}
      - BASE_FILE_PATH=${BASE_FILE_PATH}
      - PORT=3001
      # AWS/LocalStack S3 configuration
      - S3_BUCKET=${S3_BUCKET}
      - AWS_REGION=${AWS_REGION}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-http://localstack:4566}
      - S3_PUBLIC_ENDPOINT_URL=${S3_PUBLIC_ENDPOINT_URL:-http://localhost:4566}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE:-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - /app/node_modules
    command: >
      sh -c 'npm ci && echo "window.ENV = { REACT_APP_API_BASE_URL: \"$$REACT_APP_API_BASE_URL\" };" > /app/public/runtime-config.js && npm start'
    ports:
      - "4000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
      - NODE_ENV=development

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  localstack:
    image: localstack/localstack:latest
    profiles:
      - localstack
    ports:
      - "4566:4566"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:4566/_localstack/health | grep -q '\"s3\": \"available\"'"]
    environment:
      - SERVICES=s3
      - DEBUG=1
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
    volumes:
      - localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  backend_data:
  cargo-target:
  cargo-registry:
  postgres_data:
  localstack-data:
